// Code generated by protoc-gen-go. DO NOT EDIT.
// source: queue/v1/queue.proto

package v1

import (
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request to push a single event to a queue
type QueueSendRequest struct {
	// The Nitric name for the queue
	// this will automatically be resolved to the provider specific queue identifier.
	Queue string `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	// The task to push to the queue
	Task                 *NitricTask `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *QueueSendRequest) Reset()         { *m = QueueSendRequest{} }
func (m *QueueSendRequest) String() string { return proto.CompactTextString(m) }
func (*QueueSendRequest) ProtoMessage()    {}
func (*QueueSendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_12f4ed85c6129db5, []int{0}
}

func (m *QueueSendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueSendRequest.Unmarshal(m, b)
}
func (m *QueueSendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueSendRequest.Marshal(b, m, deterministic)
}
func (m *QueueSendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueSendRequest.Merge(m, src)
}
func (m *QueueSendRequest) XXX_Size() int {
	return xxx_messageInfo_QueueSendRequest.Size(m)
}
func (m *QueueSendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueSendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueueSendRequest proto.InternalMessageInfo

func (m *QueueSendRequest) GetQueue() string {
	if m != nil {
		return m.Queue
	}
	return ""
}

func (m *QueueSendRequest) GetTask() *NitricTask {
	if m != nil {
		return m.Task
	}
	return nil
}

// Result of pushing a single task to a queue
type QueueSendResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueueSendResponse) Reset()         { *m = QueueSendResponse{} }
func (m *QueueSendResponse) String() string { return proto.CompactTextString(m) }
func (*QueueSendResponse) ProtoMessage()    {}
func (*QueueSendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12f4ed85c6129db5, []int{1}
}

func (m *QueueSendResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueSendResponse.Unmarshal(m, b)
}
func (m *QueueSendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueSendResponse.Marshal(b, m, deterministic)
}
func (m *QueueSendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueSendResponse.Merge(m, src)
}
func (m *QueueSendResponse) XXX_Size() int {
	return xxx_messageInfo_QueueSendResponse.Size(m)
}
func (m *QueueSendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueSendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueueSendResponse proto.InternalMessageInfo

type QueueSendBatchRequest struct {
	// The Nitric name for the queue
	// this will automatically be resolved to the provider specific queue identifier.
	Queue string `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	// Array of tasks to push to the queue
	Tasks                []*NitricTask `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *QueueSendBatchRequest) Reset()         { *m = QueueSendBatchRequest{} }
func (m *QueueSendBatchRequest) String() string { return proto.CompactTextString(m) }
func (*QueueSendBatchRequest) ProtoMessage()    {}
func (*QueueSendBatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_12f4ed85c6129db5, []int{2}
}

func (m *QueueSendBatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueSendBatchRequest.Unmarshal(m, b)
}
func (m *QueueSendBatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueSendBatchRequest.Marshal(b, m, deterministic)
}
func (m *QueueSendBatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueSendBatchRequest.Merge(m, src)
}
func (m *QueueSendBatchRequest) XXX_Size() int {
	return xxx_messageInfo_QueueSendBatchRequest.Size(m)
}
func (m *QueueSendBatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueSendBatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueueSendBatchRequest proto.InternalMessageInfo

func (m *QueueSendBatchRequest) GetQueue() string {
	if m != nil {
		return m.Queue
	}
	return ""
}

func (m *QueueSendBatchRequest) GetTasks() []*NitricTask {
	if m != nil {
		return m.Tasks
	}
	return nil
}

// Response for sending a collection of tasks
type QueueSendBatchResponse struct {
	// A list of tasks that failed to be queued
	FailedTasks          []*FailedTask `protobuf:"bytes,1,rep,name=failedTasks,proto3" json:"failedTasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *QueueSendBatchResponse) Reset()         { *m = QueueSendBatchResponse{} }
func (m *QueueSendBatchResponse) String() string { return proto.CompactTextString(m) }
func (*QueueSendBatchResponse) ProtoMessage()    {}
func (*QueueSendBatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12f4ed85c6129db5, []int{3}
}

func (m *QueueSendBatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueSendBatchResponse.Unmarshal(m, b)
}
func (m *QueueSendBatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueSendBatchResponse.Marshal(b, m, deterministic)
}
func (m *QueueSendBatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueSendBatchResponse.Merge(m, src)
}
func (m *QueueSendBatchResponse) XXX_Size() int {
	return xxx_messageInfo_QueueSendBatchResponse.Size(m)
}
func (m *QueueSendBatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueSendBatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueueSendBatchResponse proto.InternalMessageInfo

func (m *QueueSendBatchResponse) GetFailedTasks() []*FailedTask {
	if m != nil {
		return m.FailedTasks
	}
	return nil
}

type QueueReceiveRequest struct {
	// The nitric name for the queue
	// this will automatically be resolved to the provider specific queue identifier.
	Queue string `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	// The max number of items to pop off the queue, may be capped by provider specific limitations
	Depth                int32    `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueueReceiveRequest) Reset()         { *m = QueueReceiveRequest{} }
func (m *QueueReceiveRequest) String() string { return proto.CompactTextString(m) }
func (*QueueReceiveRequest) ProtoMessage()    {}
func (*QueueReceiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_12f4ed85c6129db5, []int{4}
}

func (m *QueueReceiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueReceiveRequest.Unmarshal(m, b)
}
func (m *QueueReceiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueReceiveRequest.Marshal(b, m, deterministic)
}
func (m *QueueReceiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueReceiveRequest.Merge(m, src)
}
func (m *QueueReceiveRequest) XXX_Size() int {
	return xxx_messageInfo_QueueReceiveRequest.Size(m)
}
func (m *QueueReceiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueReceiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueueReceiveRequest proto.InternalMessageInfo

func (m *QueueReceiveRequest) GetQueue() string {
	if m != nil {
		return m.Queue
	}
	return ""
}

func (m *QueueReceiveRequest) GetDepth() int32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

type QueueReceiveResponse struct {
	// Array of tasks popped off the queue
	Tasks                []*NitricTask `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *QueueReceiveResponse) Reset()         { *m = QueueReceiveResponse{} }
func (m *QueueReceiveResponse) String() string { return proto.CompactTextString(m) }
func (*QueueReceiveResponse) ProtoMessage()    {}
func (*QueueReceiveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12f4ed85c6129db5, []int{5}
}

func (m *QueueReceiveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueReceiveResponse.Unmarshal(m, b)
}
func (m *QueueReceiveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueReceiveResponse.Marshal(b, m, deterministic)
}
func (m *QueueReceiveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueReceiveResponse.Merge(m, src)
}
func (m *QueueReceiveResponse) XXX_Size() int {
	return xxx_messageInfo_QueueReceiveResponse.Size(m)
}
func (m *QueueReceiveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueReceiveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueueReceiveResponse proto.InternalMessageInfo

func (m *QueueReceiveResponse) GetTasks() []*NitricTask {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type QueueCompleteRequest struct {
	// The nitric name for the queue
	//  this will automatically be resolved to the provider specific queue identifier.
	Queue string `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	// Lease id of the task to be completed
	LeaseId              string   `protobuf:"bytes,2,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueueCompleteRequest) Reset()         { *m = QueueCompleteRequest{} }
func (m *QueueCompleteRequest) String() string { return proto.CompactTextString(m) }
func (*QueueCompleteRequest) ProtoMessage()    {}
func (*QueueCompleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_12f4ed85c6129db5, []int{6}
}

func (m *QueueCompleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueCompleteRequest.Unmarshal(m, b)
}
func (m *QueueCompleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueCompleteRequest.Marshal(b, m, deterministic)
}
func (m *QueueCompleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueCompleteRequest.Merge(m, src)
}
func (m *QueueCompleteRequest) XXX_Size() int {
	return xxx_messageInfo_QueueCompleteRequest.Size(m)
}
func (m *QueueCompleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueCompleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueueCompleteRequest proto.InternalMessageInfo

func (m *QueueCompleteRequest) GetQueue() string {
	if m != nil {
		return m.Queue
	}
	return ""
}

func (m *QueueCompleteRequest) GetLeaseId() string {
	if m != nil {
		return m.LeaseId
	}
	return ""
}

type QueueCompleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueueCompleteResponse) Reset()         { *m = QueueCompleteResponse{} }
func (m *QueueCompleteResponse) String() string { return proto.CompactTextString(m) }
func (*QueueCompleteResponse) ProtoMessage()    {}
func (*QueueCompleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12f4ed85c6129db5, []int{7}
}

func (m *QueueCompleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueueCompleteResponse.Unmarshal(m, b)
}
func (m *QueueCompleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueueCompleteResponse.Marshal(b, m, deterministic)
}
func (m *QueueCompleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueCompleteResponse.Merge(m, src)
}
func (m *QueueCompleteResponse) XXX_Size() int {
	return xxx_messageInfo_QueueCompleteResponse.Size(m)
}
func (m *QueueCompleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueCompleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueueCompleteResponse proto.InternalMessageInfo

type FailedTask struct {
	// The task that failed to be pushed
	Task *NitricTask `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	// A message describing the failure
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FailedTask) Reset()         { *m = FailedTask{} }
func (m *FailedTask) String() string { return proto.CompactTextString(m) }
func (*FailedTask) ProtoMessage()    {}
func (*FailedTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_12f4ed85c6129db5, []int{8}
}

func (m *FailedTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailedTask.Unmarshal(m, b)
}
func (m *FailedTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailedTask.Marshal(b, m, deterministic)
}
func (m *FailedTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailedTask.Merge(m, src)
}
func (m *FailedTask) XXX_Size() int {
	return xxx_messageInfo_FailedTask.Size(m)
}
func (m *FailedTask) XXX_DiscardUnknown() {
	xxx_messageInfo_FailedTask.DiscardUnknown(m)
}

var xxx_messageInfo_FailedTask proto.InternalMessageInfo

func (m *FailedTask) GetTask() *NitricTask {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *FailedTask) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// A task to be sent or received from a queue.
type NitricTask struct {
	// A unique id for the task
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The lease id unique to the pop request, this must be used to complete, extend the lease or release the task.
	LeaseId string `protobuf:"bytes,2,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	// A content hint for the tasks payload
	PayloadType string `protobuf:"bytes,3,opt,name=payload_type,json=payloadType,proto3" json:"payload_type,omitempty"`
	// The payload of the task
	Payload              *_struct.Struct `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NitricTask) Reset()         { *m = NitricTask{} }
func (m *NitricTask) String() string { return proto.CompactTextString(m) }
func (*NitricTask) ProtoMessage()    {}
func (*NitricTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_12f4ed85c6129db5, []int{9}
}

func (m *NitricTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NitricTask.Unmarshal(m, b)
}
func (m *NitricTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NitricTask.Marshal(b, m, deterministic)
}
func (m *NitricTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NitricTask.Merge(m, src)
}
func (m *NitricTask) XXX_Size() int {
	return xxx_messageInfo_NitricTask.Size(m)
}
func (m *NitricTask) XXX_DiscardUnknown() {
	xxx_messageInfo_NitricTask.DiscardUnknown(m)
}

var xxx_messageInfo_NitricTask proto.InternalMessageInfo

func (m *NitricTask) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NitricTask) GetLeaseId() string {
	if m != nil {
		return m.LeaseId
	}
	return ""
}

func (m *NitricTask) GetPayloadType() string {
	if m != nil {
		return m.PayloadType
	}
	return ""
}

func (m *NitricTask) GetPayload() *_struct.Struct {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*QueueSendRequest)(nil), "nitric.queue.v1.QueueSendRequest")
	proto.RegisterType((*QueueSendResponse)(nil), "nitric.queue.v1.QueueSendResponse")
	proto.RegisterType((*QueueSendBatchRequest)(nil), "nitric.queue.v1.QueueSendBatchRequest")
	proto.RegisterType((*QueueSendBatchResponse)(nil), "nitric.queue.v1.QueueSendBatchResponse")
	proto.RegisterType((*QueueReceiveRequest)(nil), "nitric.queue.v1.QueueReceiveRequest")
	proto.RegisterType((*QueueReceiveResponse)(nil), "nitric.queue.v1.QueueReceiveResponse")
	proto.RegisterType((*QueueCompleteRequest)(nil), "nitric.queue.v1.QueueCompleteRequest")
	proto.RegisterType((*QueueCompleteResponse)(nil), "nitric.queue.v1.QueueCompleteResponse")
	proto.RegisterType((*FailedTask)(nil), "nitric.queue.v1.FailedTask")
	proto.RegisterType((*NitricTask)(nil), "nitric.queue.v1.NitricTask")
}

func init() { proto.RegisterFile("queue/v1/queue.proto", fileDescriptor_12f4ed85c6129db5) }

var fileDescriptor_12f4ed85c6129db5 = []byte{
	// 598 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0xc1, 0x6e, 0xd3, 0x4c,
	0x10, 0xd6, 0xba, 0x49, 0x93, 0x4e, 0xa2, 0xff, 0x0f, 0xdb, 0x84, 0x18, 0xc3, 0x21, 0xb5, 0x4a,
	0x09, 0x54, 0xd8, 0x38, 0x9c, 0x50, 0xc5, 0xc5, 0x48, 0x48, 0x3d, 0x80, 0x5a, 0x37, 0x6a, 0x05,
	0xb8, 0x54, 0x4e, 0xbc, 0x4d, 0xad, 0xba, 0xb1, 0xeb, 0xdd, 0xb8, 0xca, 0x09, 0x4e, 0x1c, 0x90,
	0xb8, 0xf0, 0x18, 0x3c, 0x0a, 0x0f, 0xc3, 0x03, 0xe4, 0x84, 0xb2, 0xbb, 0x4e, 0xd2, 0x40, 0x08,
	0x2a, 0xb7, 0x9d, 0x99, 0x6f, 0xbe, 0xfd, 0x76, 0xf6, 0x1b, 0xa8, 0x5e, 0x0e, 0xc8, 0x80, 0x98,
	0xa9, 0x65, 0xf2, 0x83, 0x11, 0x27, 0x11, 0x8b, 0xf0, 0xff, 0xfd, 0x80, 0x25, 0x41, 0xd7, 0x10,
	0xb9, 0xd4, 0xd2, 0xee, 0xf5, 0xa2, 0xa8, 0x17, 0x12, 0x93, 0x97, 0x3b, 0x83, 0x53, 0x93, 0xb2,
	0x64, 0xd0, 0x65, 0x02, 0xae, 0xd5, 0x53, 0x2f, 0x0c, 0x7c, 0x8f, 0x11, 0x33, 0x3b, 0x88, 0x82,
	0xfe, 0x01, 0x2a, 0xfb, 0x63, 0x8a, 0x03, 0xd2, 0xf7, 0x1d, 0x72, 0x39, 0x20, 0x94, 0xe1, 0x27,
	0x90, 0xe7, 0xb4, 0x2a, 0x6a, 0xa0, 0xe6, 0x9a, 0xad, 0x8d, 0xec, 0x7a, 0x52, 0x6b, 0x7e, 0x54,
	0x5a, 0x95, 0xf7, 0xee, 0xd5, 0x76, 0xf3, 0x9d, 0xe1, 0x3e, 0x3e, 0x76, 0xaf, 0xb6, 0x1f, 0x3e,
	0xda, 0x74, 0x04, 0x10, 0x3f, 0x83, 0x1c, 0xf3, 0xe8, 0xb9, 0xaa, 0x34, 0x50, 0xb3, 0xd4, 0xba,
	0x6b, 0xcc, 0x89, 0x33, 0x5e, 0xf3, 0xb8, 0xed, 0xd1, 0x73, 0xbb, 0x38, 0xb2, 0xf3, 0x9f, 0x91,
	0x52, 0x41, 0x0e, 0x6f, 0xd1, 0xd7, 0xe1, 0xd6, 0x8c, 0x00, 0x1a, 0x47, 0x7d, 0x4a, 0xf4, 0x4f,
	0x08, 0x6a, 0x93, 0xac, 0xed, 0xb1, 0xee, 0xd9, 0xcd, 0xb5, 0xed, 0x40, 0x7e, 0x7c, 0x11, 0x55,
	0x95, 0xc6, 0xca, 0xdf, 0x88, 0xfb, 0x8a, 0x94, 0x22, 0x72, 0x44, 0x8f, 0x7e, 0x04, 0xb7, 0xe7,
	0x75, 0x08, 0x89, 0xf8, 0x39, 0x94, 0x4e, 0xbd, 0x20, 0x24, 0x7e, 0x9b, 0x93, 0xa3, 0x05, 0xe4,
	0x2f, 0x27, 0x18, 0x67, 0x16, 0xaf, 0x1f, 0xc3, 0x3a, 0x27, 0x76, 0x48, 0x97, 0x04, 0x29, 0xb9,
	0xf9, 0xf3, 0xaa, 0x90, 0xf7, 0x49, 0xcc, 0xce, 0xf8, 0xec, 0xf3, 0x8e, 0x08, 0xf4, 0x5d, 0xa8,
	0x5e, 0xa7, 0x97, 0xaa, 0xad, 0x6c, 0x18, 0x68, 0xe9, 0x30, 0xb2, 0x11, 0x84, 0x92, 0xea, 0x45,
	0x74, 0x11, 0x87, 0x84, 0xfd, 0x83, 0x54, 0x1d, 0x8a, 0x21, 0xf1, 0x28, 0x39, 0x09, 0x7c, 0xae,
	0x76, 0xcd, 0x2e, 0x8c, 0xec, 0x5c, 0x32, 0xf6, 0x42, 0x81, 0x17, 0x76, 0x7d, 0xbd, 0x2e, 0x3f,
	0x7e, 0x7a, 0x9b, 0xb4, 0xc4, 0x11, 0xc0, 0x74, 0x96, 0xd8, 0x94, 0x86, 0x43, 0x4b, 0x0d, 0x27,
	0x6c, 0x86, 0x55, 0x28, 0x5c, 0x10, 0x4a, 0xbd, 0x1e, 0x11, 0x57, 0x3b, 0x59, 0xa8, 0x7f, 0x41,
	0x00, 0x53, 0x38, 0xfe, 0x0f, 0x94, 0xc0, 0x17, 0x6f, 0x72, 0x94, 0xc0, 0xc7, 0x77, 0xe6, 0x45,
	0x4f, 0xb4, 0xe2, 0x0d, 0x28, 0xc7, 0xde, 0x30, 0x8c, 0x3c, 0xff, 0x84, 0x0d, 0x63, 0xa2, 0xae,
	0xf0, 0x72, 0x49, 0xe6, 0xda, 0xc3, 0x78, 0x3c, 0xef, 0x82, 0x0c, 0xd5, 0x1c, 0x97, 0x5a, 0x37,
	0xc4, 0x9e, 0x1a, 0xd9, 0x9e, 0x1a, 0x07, 0x7c, 0x4f, 0x9d, 0x0c, 0xd7, 0xfa, 0xa1, 0x40, 0x59,
	0x7a, 0x2e, 0x49, 0x83, 0x2e, 0xc1, 0xaf, 0x20, 0x37, 0xb6, 0x1f, 0xde, 0xf8, 0xe5, 0x95, 0xf3,
	0x9b, 0xab, 0xe9, 0x7f, 0x82, 0x48, 0x0b, 0xb8, 0xb0, 0x36, 0x71, 0x33, 0xde, 0x5a, 0xdc, 0x30,
	0xbb, 0x76, 0xda, 0x83, 0xa5, 0x38, 0xc9, 0x7e, 0x08, 0x05, 0xe9, 0x39, 0xbc, 0xf9, 0xfb, 0x9e,
	0xeb, 0x8e, 0xd7, 0xee, 0x2f, 0x41, 0x49, 0xde, 0x37, 0x50, 0xcc, 0x2c, 0x81, 0x17, 0xb4, 0xcc,
	0x19, 0x54, 0xdb, 0x5a, 0x06, 0x13, 0xd4, 0x76, 0x07, 0xd4, 0x20, 0xca, 0xb0, 0xfc, 0x5b, 0x26,
	0x1d, 0xf6, 0x2a, 0x6f, 0xa1, 0x7b, 0xe8, 0x6d, 0x59, 0x00, 0xcc, 0xd4, 0xda, 0x49, 0xad, 0x6f,
	0x4a, 0x4d, 0x58, 0xc6, 0xd8, 0xe3, 0xf8, 0x7d, 0x89, 0xff, 0x9e, 0xe5, 0x5d, 0x9e, 0x77, 0x79,
	0xde, 0x3d, 0xb4, 0x3a, 0xab, 0x9c, 0xf7, 0xe9, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x18, 0x3b,
	0x7d, 0xc4, 0xcd, 0x05, 0x00, 0x00,
}
